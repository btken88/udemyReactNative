{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/brycekennedy/Development/udemyReactNative/rn-starter/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorAdjustor from \"../components/ColorAdjustor\";\nvar COLOR_INCREMENT = 10;\n\nfunction reducer(state, action) {\n  switch (action.color) {\n    case 'red':\n      return state.red + action.amount > 255 || state.red + action.amount < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.amount\n      });\n\n    case 'green':\n      return state.green + action.amount > 255 || state.green + action.amount < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.amount\n      });\n\n    case 'blue':\n      return state.blue + action.amount > 255 || state.blue + action.amount < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.amount\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(ColorAdjustor, {\n    color: \"Red\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        color: 'red',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        color: 'red',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorAdjustor, {\n    color: \"Green\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        color: 'green',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        color: 'green',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorAdjustor, {\n    color: \"Blue\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        color: 'blue',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        color: 'blue',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: \"rgb(\" + state.red + \", \" + state.green + \", \" + state.blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/brycekennedy/Development/udemyReactNative/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorAdjustor","COLOR_INCREMENT","reducer","state","action","color","red","amount","green","blue","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport ColorAdjustor from '../components/ColorAdjustor'\n\nconst COLOR_INCREMENT = 10\n\nfunction reducer(state, action) {\n  switch (action.color) {\n    case 'red':\n      return state.red + action.amount > 255 || state.red + action.amount < 0\n        ? state\n        : { ...state, red: state.red + action.amount }\n    case 'green':\n      return state.green + action.amount > 255 || state.green + action.amount < 0\n        ? state\n        : { ...state, green: state.green + action.amount }\n    case 'blue':\n      return state.blue + action.amount > 255 || state.blue + action.amount < 0\n        ? state\n        : { ...state, blue: state.blue + action.amount }\n    default:\n      return state\n  }\n}\n\nexport default function SquareScreen() {\n  const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 })\n\n  return (\n    <View>\n      <ColorAdjustor color='Red'\n        onIncrease={() => dispatch({ color: 'red', amount: COLOR_INCREMENT })}\n        onDecrease={() => dispatch({ color: 'red', amount: -1 * COLOR_INCREMENT })} />\n      <ColorAdjustor color='Green'\n        onIncrease={() => dispatch({ color: 'green', amount: COLOR_INCREMENT })}\n        onDecrease={() => dispatch({ color: 'green', amount: -1 * COLOR_INCREMENT })} />\n      <ColorAdjustor color='Blue'\n        onIncrease={() => dispatch({ color: 'blue', amount: COLOR_INCREMENT })}\n        onDecrease={() => dispatch({ color: 'blue', amount: -1 * COLOR_INCREMENT })} />\n      <View style={{\n        height: 100,\n        width: 100,\n        backgroundColor: `rgb(${state.red}, ${state.green}, ${state.blue})`\n      }} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({})\n"]},"metadata":{},"sourceType":"module"}