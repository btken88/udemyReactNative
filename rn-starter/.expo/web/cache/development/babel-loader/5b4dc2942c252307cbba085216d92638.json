{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brycekennedy/Development/udemyReactNative/rn-starter/src/screens/ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { FlatList } from 'react-native-gesture-handler';\nexport default function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  function addColor() {\n    setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    console.log(colors);\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add a Color\",\n    onPress: addColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 18\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n}\n\nvar styles = StyleSheet.create({\n  colorBox: {\n    height: 100,\n    width: 100\n  }\n});","map":{"version":3,"sources":["/Users/brycekennedy/Development/udemyReactNative/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","FlatList","ColorScreen","colors","setColors","addColor","randomRgb","console","log","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create","colorBox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,kBAERF,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,MAE7BG,MAF6B;AAAA,MAErBC,SAFqB;;AAIpC,WAASC,QAAT,GAAoB;AAClBD,IAAAA,SAAS,8BAAKD,MAAL,IAAaG,SAAS,EAAtB,GAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,OAAO,EAAEE,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,MADR;AAEE,IAAA,YAAY,EAAE,sBAAAM,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAFpB;AAGE,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXA,IAAW,QAAXA,IAAW;AACxB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEH;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAYD;;AAED,SAASH,SAAT,GAAqB;AACnB,MAAMO,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,kBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACD;;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,QAAQ,EAAE;AACRZ,IAAAA,MAAM,EAAE,GADA;AAERC,IAAAA,KAAK,EAAE;AAFC;AADqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, Button } from 'react-native'\nimport { FlatList } from 'react-native-gesture-handler'\n\nexport default function ColorScreen() {\n\n  const [colors, setColors] = useState([])\n\n  function addColor() {\n    setColors([...colors, randomRgb()])\n    console.log(colors)\n  }\n\n  return (\n    <View>\n      <Button title=\"Add a Color\" onPress={addColor} />\n      <FlatList\n        data={colors}\n        keyExtractor={item => item}\n        renderItem={({ item }) => {\n          return <View style={{ height: 100, width: 100, backgroundColor: item }} />\n        }}\n      />\n    </View>\n  )\n}\n\nfunction randomRgb() {\n  const red = Math.floor(Math.random() * 256)\n  const green = Math.floor(Math.random() * 256)\n  const blue = Math.floor(Math.random() * 256)\n\n  return `rgb(${red}, ${green}, ${blue})`\n}\n\nconst styles = StyleSheet.create({\n  colorBox: {\n    height: 100,\n    width: 100\n  }\n})"]},"metadata":{},"sourceType":"module"}